[tool.poetry]
name = "oject-oriented-ml"
version = "0.0.1"
description = " High-level ML framework that provides standardized interfaces so we can swap out individual components in our workflow without having to change everything else."
authors = ["Thomas Loeber <thomas.loeber73@gmail.com>"]
license = "MIT"
packages = [
	{ include = "oo_ml", from = "src" },
]

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "pytorch_cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.pytest.ini_options]
pythonpath = ["src"]


[tool.poetry.dependencies]
python = "^3.10"
pandas = "^2.0.2"
pydantic = "^1.10.9"

[tool.poetry.group.dev.dependencies]
mypy = "^1.4.0"
pylint = "^2.17.4"
black = "^23.3.0"
pytest = "^7.3.2"

[tool.poetry.group.examples]
optional = false

[tool.poetry.group.examples.dependencies]
loguru = "^0.7.0"
better-exceptions = "^0.3.3"
matplotlib = "^3.7.1"
jupyter = "^1.0.0"
ipykernel = "*"
ipython = "^8.14.0"
nb-mypy = "^1.0.5"
lightning = "^2.0.8"
jsonargparse = {extras = ["signatures"], version = "^4.24.1"}

[tool.poetry.group.cloud_aws]
optional = true
[tool.poetry.group.cloud_aws.dependencies]
boto3 = "^1.26.158"
botocore = "^1.29.158"

[tool.poetry.group.data_parquet]
optional = true
[tool.poetry.group.data_parquet.dependencies]
pyarrow = "^12.0.1"

[tool.poetry.group.frameworks_scikit-learn]
optional = true
[tool.poetry.group.frameworks_scikit-learn.dependencies]
scikit-learn = "^1.2.2"

[tool.poetry.group.frameworks_pytorch_cpu]
optional = false
[tool.poetry.group.frameworks_pytorch_cpu.dependencies]
torch = {version = "^2.0.1+cpu", source = "pytorch_cpu"}
torchvision = {version = "^0.15.2+cpu", source = "pytorch_cpu"}
torchaudio = {version = "^2.0.2+cpu", source = "pytorch_cpu"}

[tool.poetry.group.frameworks_pytorch_lightning]
optional = false
[tool.poetry.group.frameworks_pytorch_lightning.dependencies]
pytorch-lightning = "^2.0.4"


[tool.poetry.group.frameworks_sagemaker.dependencies]
sagemaker = "^2.173.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
