@startuml

BaseDataContainer o-- BaseDataSplitter : has a (delegates to)
BaseDataContainer .right.|> BaseDataSet : uses (constructed from and returns)

abstract class BaseDataContainer {
  + format: BaseDataFormat
  + <<create>>from_subsets(train_set: BaseDataSetInterface, validation_set: BaseDataSetInterface, test_set: BaseDataSetInterface)
  + <<create>>from_complete_set(complete_set: BaseDataSetInterface)
  + to_format(format: BaseDataFormat)
}

abstract class BaseDataSplitter {
  - test_proportion: float = 0.2
  - validation_proportion: float = 0.2
  - _split_data()
  + get_train_data()
  + get_test_data()
  + get_validation_data()
}

class IndependentDataSplitter
class TimeSeriesDataSplitter {
  - time_identifiers
}
class ClusteredDataSplitter {
  - cluster_identifiers
}
class SpatialDataSplitter {
  - coordinate_identifiers
}
class PreSplitDataSplitter{
  - training_set
  - validation_set
  - test_set
  - _split_data(): SemanticError
  + combine_data()
}

BaseDataSplitter <|-- IndependentDataSplitter
BaseDataSplitter <|-- TimeSeriesDataSplitter
BaseDataSplitter <|-- ClusteredDataSplitter
BaseDataSplitter <|-- SpatialDataSplitter
BaseDataSplitter <|-- PreSplitDataSplitter


abstract class BaseDataSet {
  - reader: BaseDataReader
  - writer: BaseDataWriter
  +<<create>>from_format(format: BaseDataFormat)
  +to_format(format: BaseDataFormat)
  +get_storage_format()
  +read()
  +write()
}

abstract class BaseDataReader {
  read(): InMemoryRepresentation
}
class PandasReader {
	read: pd.DataFrame
}
class JSONReader {
	read: dict[Any, Any]
}

abstract class BaseDataWriter {
  write(): None
}

class PandasWriter {
	write(): None
}

class JSONWriter {
	write: None
}

BaseDataSet o-- BaseDataReader : has a (delegates to)
BaseDataSet o-- BaseDataWriter : has a (delegates to)

BaseDataReader <|-- PandasReader
BaseDataReader <|-- JSONReader

BaseDataWriter <|-- PandasWriter
BaseDataWriter <|-- JSONWriter

class StructuredDataSet{
  +<<create>>from_format(format: StructuredDataFormat)
  +to_format(format: StructuredDataFormat)
}

class SemiStructuredDataSet{
  +<<create>>from_format(format: SemiStructuredDataFormat)
  +to_format(format: SemiStructuredDataFormat)
}

class FileDataSet {
  +<<create>>from_format(format: FileFormat)
  +to_format(format: FileFormat)
}

BaseDataSet <|-- StructuredDataSet
BaseDataSet <|-- SemiStructuredDataSet
BaseDataSet <|-- FileDataSet

@enduml
